[chech] **Concept for Schedule Builder Usage**

This document outlines the intended usage and functionality of the Schedule Builder interface.

**I. Overview**
The Schedule Builder allows users to create custom training schedules by dragging and dropping various elements (e.g., HR zones, strength exercises, recovery activities) into daily, weekly, or block-based structures. It also supports the creation of custom training and rest measurements.

**II. Key Features & Workflow**

1.  **Element Selection (Sidebar):**
    *   Users can select different categories of training elements (Cardio, Strength, Recovery, Coordination, Flexibility, Speed, Nutrition, General, Standard Schemas) using the "Kies Categorie" dropdown.
    *   Each category displays a list of draggable items (e.g., "Rustzone", "Full Body Training", "Actief Herstel").
    *   Standard Schemas provide pre-defined daily structures that can be dragged and dropped.

2.  **Schedule Configuration (Main Content Area):**
    *   **Dag (Day) Tab:**
        *   Allows users to build a single day's schedule.
        *   Users can name the day using the "Naam van deze dag" input.
        *   Elements from the sidebar can be dragged into the "day-drop-zone" (timeline).
        *   Dropped items can be configured (e.g., duration for HR zones, reps/sets for strength exercises).
        *   The "Sla Dag op" button saves the configured day.
        *   Saved days are listed under "Opgeslagen Dagen".
    *   **Week Tab:**
        *   Allows users to build a weekly schedule.
        *   Users can name the week using the "Naam van deze week" input.
        *   Saved days (from the "Dag" tab) can be dragged into specific day slots (Maandag, Dinsdag, etc.) within the calendar grid.
        *   The "Sla Week op" button saves the configured week.
        *   Saved weeks are listed under "Opgeslagen Weken".
    *   **Blok (Block) Tab:**
        *   Allows users to build a training block (e.g., a monthly or multi-week plan).
        *   Users can name the block and add notes.
        *   Saved weeks (from the "Week" tab) can be dragged into the "blok-drop-zone".
        *   The "Sla Blok op" button saves the configured block.
        *   Saved blocks are listed under "Opgeslagen Blokken".

3.  **Form Builder Tab:**
    *   **Nieuwe Aangepaste Training Meting (New Custom Training Measurement):**
        *   Users can define custom training measurements by naming them and dragging HR zones or exercises into the designated drop zone.
        *   The "Sla Aangepaste Training op" button saves the custom training measurement.
    *   **Nieuwe Aangepaste Rust Meting (New Custom Rest Measurement):**
        *   Users can define custom rest measurements by naming them, adding a description, and specifying goals/formulas.
        *   The "Sla Aangepaste Rust op" button saves the custom rest measurement.
    *   Custom measurements created here will appear in the "Aangepaste Metingen" section of the sidebar, making them available for drag-and-drop into schedules.

**III. Interaction and User Experience**

*   **Drag & Drop:** The primary interaction method for building schedules.
*   **Settings Icon:** A settings icon (`fas fa-cog`) is present, suggesting further configuration options (not detailed in this HTML, likely handled by JavaScript).
*   **Messages:** A message box (`message-box`) is available for displaying user feedback or notifications.

---

**Current Execution Plan (for Gemini):**

**Goal:** Enhance the display and configurability of custom training and rest measurements when they are dragged and dropped into the "Day" tab's timeline.

**Checklist:**

- [ ] **Step 1: Analyze Current Implementation of Custom Measurement Display:**
    - Examine the `js/scheduleBuilderView.js` file to pinpoint the exact code sections responsible for handling the `drop` event on the `day-drop-zone`.
    - Specifically look at how `custom-training-measurement` and `custom-rest-measurement` types are currently rendered and what data (`customMeasurementDefinition`, `customMeasurementDescription`, `customMeasurementGoals`) is being used.

- [ ] **Step 2: Modify `js/scheduleBuilderView.js` - Enhance Custom Training Measurement Display:**
    - Update the `drop` event listener for the `day-drop-zone`.
    - When a `custom-training-measurement` is dropped, dynamically generate and append HTML for each individual HR zone or exercise defined within its `customMeasurementDefinition`.
    - These individual elements will include their respective input fields (e.g., duration for HR zones, reps/sets for strength exercises, progression checkboxes) to allow for per-day configuration.
    - Ensure these nested elements are visually distinct and clearly part of the custom training measurement.

- [ ] **Step 3: Modify `js/scheduleBuilderView.js` - Enhance Custom Rest Measurement Display:**
    - Update the `drop` event listener for the `day-drop-zone`.
    - When a `custom-rest-measurement` is dropped, display its `customMeasurementDescription` and `customMeasurementGoals` directly within the dropped item's HTML, making them easily visible on the timeline.

- [ ] **Step 4: Modify `js/scheduleBuilderView.js` - Update `populateDropZone` for Loading:**
    - Adjust the `populateDropZone` function to ensure that when a saved day (which may contain custom training or rest measurements) is loaded, these custom measurements are rendered with the enhanced display and configurable inputs.

- [ ] **Step 5: Update Day Saving Logic:**
    - Review and modify the `save-day-btn` click listener to ensure that when a day containing enhanced custom training measurements is saved, the configured values (durations, reps/sets, progression, notes) of the nested individual elements are correctly captured and stored.

- [ ] **Step 6: Test and Verify:**
    - Instruct on how to run the application and guide through testing the new functionality.
    - Verify creating new custom training and rest measurements.
    - Verify dragging custom measurements to the "Day" tab.
    - Verify configuring nested elements (for custom training) or viewing details (for custom rest).
    - Verify saving the day.
    - Verify reloading the page and that the saved day loads with all configurations intact.